{"version":3,"sources":["webpack://cornerstoneTools/./tools/annotation/RectangleRoiTool.js"],"names":["logger","getLogger","RectangleRoiTool","configuration","defaultConfig","name","supportedInteractionTypes","svgCursor","rectangleRoiCursor","initialConfiguration","Object","assign","eventData","goodEventData","currentPoints","image","error","visible","active","color","undefined","invalidated","handles","start","x","y","highlight","end","textBox","hasMoved","movesIndependently","drawnIndependently","allowedOutsideImage","hasBoundingBox","element","data","coords","interactionType","hasStartAndEndHandles","validParameters","warn","distance","startCanvas","external","cornerstone","pixelToCanvas","endCanvas","rect","left","Math","min","top","width","abs","height","distanceToPoint","cornerstoneMath","evt","toolData","getToolState","currentTarget","detail","lineWidth","toolStyle","getToolWidth","handleRadius","drawHandlesOnHover","context","getNewContext","canvasContext","canvas","seriesModule","metaData","get","imageId","imagePlane","modality","hasPixelSpacing","rowPixelSpacing","columnPixelSpacing","pixelSpacing","draw","i","length","toolColors","getColorIfActive","handleOptions","drawHandlesIfActive","setShadow","drawRect","drawHandles","cachedStats","_throttledUpdateCachedStats","_updateCachedStats","max","textBoxAnchorPoints","_findTextBoxAnchorPoints","textBoxContent","_createTextBoxContent","drawLinkedTextBox","BaseAnnotationTool","throttle","stats","_calculateStats","_getRectangleImageCoordinates","startHandle","endHandle","roiCoordinates","pixels","getPixels","roiMeanStdDev","_calculateRectangleStats","meanStdDevSUV","mean","calculateSUV","stdDev","area","count","meansss","variance","sp","rectangle","sum","sumSquared","index","sqrt","_formatArea","suffix","String","fromCharCode","numbersWithCommas","toFixed","isColorImage","options","showMinMax","showHounsfieldUnits","textLines","otherLines","hasStandardUptakeValues","meanString","stdDevString","SUVtext","meanSuvString","stdDevSuvString","targetStringLength","floor","measureText","push","minString","maxString","forEach"],"mappings":"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","file":"cornerstoneTools.191fcf370a21e43c453f.hot-update.js","sourcesContent":["import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  drawHandles,\n  drawRect,\n  drawLinkedTextBox,\n  setShadow,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { rectangleRoiCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:RectangleRoiTool');\n\n/**\n * @public\n * @class RectangleRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing rectangular regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class RectangleRoiTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'RectangleRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        // showMinMax: false,\n        // showHounsfieldUnits: true\n      },\n      svgCursor: rectangleRoiCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    const rect = {\n      left: Math.min(startCanvas.x, endCanvas.x),\n      top: Math.min(startCanvas.y, endCanvas.y),\n      width: Math.abs(startCanvas.x - endCanvas.x),\n      height: Math.abs(startCanvas.y - endCanvas.y),\n    };\n\n    const distanceToPoint = external.cornerstoneMath.rect.distanceToPoint(\n      rect,\n      coords\n    );\n\n    return distanceToPoint < distance;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const { image, element } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    let imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing =\n      imagePlane && imagePlane.rowPixelSpacing && imagePlane.columnPixelSpacing;\n\n    imagePlane = imagePlane || {};\n    const pixelSpacing = {\n      rowPixelSpacing: imagePlane.rowPixelSpacing || 1,\n      columnPixelSpacing: imagePlane.columnPixelSpacing || 1,\n    };\n\n    draw(context, context => {\n      // If we have tool data for this element - iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        // Draw\n        drawRect(context, element, data.handles.start, data.handles.end, {\n          color,\n        });\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            _throttledUpdateCachedStats(\n              image,\n              element,\n              data,\n              modality,\n              pixelSpacing\n            );\n          } else {\n            _updateCachedStats(image, element, data, modality, pixelSpacing);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          data.handles.textBox.x = Math.max(\n            data.handles.start.x,\n            data.handles.end.x\n          );\n          data.handles.textBox.y =\n            (data.handles.start.y + data.handles.end.y) / 2;\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          0,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n *\n */\nconst _throttledUpdateCachedStats = throttle(_updateCachedStats, 110);\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} data\n * @param {string} modality\n * @param {*} pixelSpacing\n * @returns {void}\n */\nfunction _updateCachedStats(image, element, data, modality, pixelSpacing) {\n  const stats = _calculateStats(\n    image,\n    element,\n    data.handles,\n    modality,\n    pixelSpacing\n  );\n\n  data.cachedStats = stats;\n  data.invalidated = false;\n}\n\n/**\n * TODO: This is the same method (+ GetPixels) for the other ROIs\n * TODO: The pixel filtering is the unique bit\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number}}\n */\nfunction _getRectangleImageCoordinates(startHandle, endHandle) {\n  return {\n    left: Math.min(startHandle.x, endHandle.x),\n    top: Math.min(startHandle.y, endHandle.y),\n    width: Math.abs(startHandle.x - endHandle.x),\n    height: Math.abs(startHandle.y - endHandle.y),\n  };\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the rectangle in image coordinates\n  const roiCoordinates = _getRectangleImageCoordinates(\n    handles.start,\n    handles.end\n  );\n\n  // Retrieve the array of pixels that the rectangle bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    roiCoordinates.left,\n    roiCoordinates.top,\n    roiCoordinates.width,\n    roiCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the rectangle details\n  const roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates);\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, roiMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, roiMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  // Calculate the image area from the rectangle dimensions and pixel spacing\n  const area =\n    roiCoordinates.width *\n    (pixelSpacing.columnPixelSpacing || 1) *\n    (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1));\n\n  return {\n    area: area || 0,\n    count: roiMeanStdDev.count || 0,\n    meansss: roiMeanStdDev.mean || 0,\n    variance: roiMeanStdDev.variance || 0,\n    stdDev: roiMeanStdDev.stdDev || 0,\n    min: roiMeanStdDev.min || 0,\n    max: roiMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n\n/**\n *\n *\n * @param {*} sp\n * @param {*} rectangle\n * @returns {{ count, number, mean: number,  variance: number,  stdDev: number,  min: number,  max: number }}\n */\nfunction _calculateRectangleStats(sp, rectangle) {\n  let sum = 0;\n  let sumSquared = 0;\n  let count = 0;\n  let index = 0;\n  let min = sp ? sp[0] : null;\n  let max = sp ? sp[0] : null;\n\n  for (let y = rectangle.top; y < rectangle.top + rectangle.height; y++) {\n    for (let x = rectangle.left; x < rectangle.left + rectangle.width; x++) {\n      sum += sp[index];\n      sumSquared += sp[index] * sp[index];\n      min = Math.min(min, sp[index]);\n      max = Math.max(max, sp[index]);\n      count++; // TODO: Wouldn't this just be sp.length?\n      index++;\n    }\n  }\n\n  if (count === 0) {\n    return {\n      count,\n      mean: 0.0,\n      variance: 0.0,\n      stdDev: 0.0,\n      min: 0.0,\n      max: 0.0,\n    };\n  }\n\n  const mean = sum / count;\n  const variance = sumSquared / count - mean * mean;\n\n  return {\n    count,\n    mean,\n    variance,\n    stdDev: Math.sqrt(variance),\n    min,\n    max,\n  };\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = _getRectangleImageCoordinates(\n    startHandle,\n    endHandle\n  );\n\n  return [\n    {\n      // Top middle point of rectangle\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of rectangle\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of rectangle\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of rectangle\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\n/**\n * TODO: This is identical to EllipticalROI's same fn\n * TODO: We may want to make this a utility for ROIs with these values?\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}]\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV },\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const showHounsfieldUnits = options.showHounsfieldUnits !== false;\n  const textLines = [];\n\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const suffix = modality === 'CT' && showHounsfieldUnits ? ' HU' : '';\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))}${suffix}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )}${suffix}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min}${suffix}`;\n      const maxString = `Max: ${max}${suffix}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n"],"sourceRoot":""}
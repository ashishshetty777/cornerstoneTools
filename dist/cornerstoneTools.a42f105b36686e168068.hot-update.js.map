{"version":3,"sources":["webpack://cornerstoneTools/./tools/annotation/LengthTool.js"],"names":["logger","getLogger","LengthTool","props","defaultProps","name","supportedInteractionTypes","svgCursor","lengthCursor","throttledUpdateCachedStats","throttle","updateCachedStats","eventData","goodEventData","currentPoints","image","error","x","y","visible","active","color","undefined","invalidated","handles","start","highlight","end","textBox","hasMoved","movesIndependently","drawnIndependently","allowedOutsideImage","hasBoundingBox","element","data","coords","hasStartAndEndHandles","validParameters","warn","lineSegDistance","getPixelSpacing","rowPixelSpacing","colPixelSpacing","dx","dy","length","Math","sqrt","evt","detail","configuration","handleRadius","drawHandlesOnHover","toolData","getToolState","currentTarget","context","getNewContext","canvasContext","canvas","lineWidth","toolStyle","getToolWidth","i","draw","setShadow","toolColors","getColorIfActive","drawLine","handleOptions","drawHandlesIfActive","drawHandles","max","xOffset","text","drawLinkedTextBox","textBoxAnchorPoints","textBoxText","suffix","unit","toFixed","midpoint","BaseAnnotationTool"],"mappings":"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","file":"cornerstoneTools.a42f105b36686e168068.hot-update.js","sourcesContent":["import BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../drawing/index.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport { lengthCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\nimport throttle from '../../util/throttle';\n\nconst logger = getLogger('tools:annotation:LengthTool');\n\n/**\n * @public\n * @class LengthTool\n * @memberof Tools.Annotation\n * @classdesc Tool for measuring distances.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class LengthTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Length',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: lengthCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const { x, y } = eventData.currentPoints.image;\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x,\n          y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x,\n          y,\n          highlight: true,\n          active: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n\n      return false;\n    }\n\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n      25\n    );\n  }\n\n  updateCachedStats(image, element, data) {\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    // Set rowPixelSpacing and columnPixelSpacing to 1 if they are undefined (or zero)\n    const dx =\n      (data.handles.end.x - data.handles.start.x) * (colPixelSpacing || 1);\n    const dy =\n      (data.handles.end.y - data.handles.start.y) * (rowPixelSpacing || 1);\n\n    // Calculate the length, and create the text variable with the millimeters or pixels suffix\n    const length = Math.sqrt(dx * dx + dy * dy);\n\n    // Store the length inside the tool for outside access\n    data.length = length;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        // Configurable shadow\n        setShadow(context, this.configuration);\n\n        const color = toolColors.getColorIfActive(data);\n\n        // Draw the measurement line\n        drawLine(context, element, data.handles.start, data.handles.end, {\n          color,\n        });\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        if (!data.handles.textBox.hasMoved) {\n          const coords = {\n            x: Math.max(data.handles.start.x, data.handles.end.x),\n          };\n\n          // Depending on which handle has the largest x-value,\n          // Set the y-value for the text box\n          if (coords.x === data.handles.start.x) {\n            coords.y = data.handles.start.y;\n          } else {\n            coords.y = data.handles.end.y;\n          }\n\n          data.handles.textBox.x = coords.x;\n          data.handles.textBox.y = coords.y;\n        }\n\n        // Move the textbox slightly to the right and upwards\n        // So that it sits beside the length tool handle\n        const xOffset = 10;\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.length) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        const text = '';\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          text,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          xOffset,\n          true\n        );\n      });\n    }\n\n    function textBoxText(data, rowPixelSpacing, colPixelSpacing) {\n      // Set the length text suffix depending on whether or not pixelSpacing is available\n      let suffix = 'mm';\n\n      if (!rowPixelSpacing || !colPixelSpacing) {\n        suffix = 'pixels';\n      }\n\n      data.unit = suffix;\n\n      return `${data.length.toFixed(2)} ${suffix}`;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      const midpoint = {\n        x: (handles.start.x + handles.end.x) / 2,\n        y: (handles.start.y + handles.end.y) / 2,\n      };\n\n      return [handles.start, midpoint, handles.end];\n    }\n  }\n}\n"],"sourceRoot":""}
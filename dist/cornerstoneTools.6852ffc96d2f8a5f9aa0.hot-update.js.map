{"version":3,"sources":["webpack://cornerstoneTools/./drawing/drawEllipse.js","webpack://cornerstoneTools/./drawing/drawRect.js","webpack://cornerstoneTools/./tools/annotation/EllipticalRoiTool.js","webpack://cornerstoneTools/./tools/annotation/FreehandMouseTool.js","webpack://cornerstoneTools/./tools/annotation/LengthTool.js","webpack://cornerstoneTools/./tools/annotation/RectangleRoiTool.js","webpack://cornerstoneTools/./tools/base/BaseBrushTool.js","webpack://cornerstoneTools/./util/pointProjector.js"],"names":["context","element","corner1","corner2","options","coordSystem","initialRotation","external","cornerstone","pixelToCanvas","viewport","getViewport","width","clientWidth","height","clientHeight","scale","translation","rotation","centerPoint","x","y","Math","abs","rotatePoint","w","h","xMin","min","yMin","center","angle","PI","path","ellipse","closePath","corner3","corner4","moveTo","lineTo","logger","getLogger","EllipticalRoiTool","configuration","defaultConfig","name","supportedInteractionTypes","svgCursor","ellipticalRoiCursor","initialConfiguration","Object","assign","eventData","goodEventData","currentPoints","image","error","visible","active","color","undefined","invalidated","handles","start","highlight","end","textBox","hasMoved","movesIndependently","drawnIndependently","allowedOutsideImage","hasBoundingBox","data","coords","interactionType","hasStartAndEndHandles","validParameters","warn","distance","startCanvas","endCanvas","minorEllipse","left","top","majorEllipse","pointInMinorEllipse","pointInEllipse","pointInMajorEllipse","evt","toolData","getToolState","currentTarget","detail","lineWidth","toolStyle","getToolWidth","handleRadius","drawHandlesOnHover","getNewContext","canvasContext","canvas","seriesModule","metaData","get","imageId","imagePlane","modality","hasPixelSpacing","rowPixelSpacing","columnPixelSpacing","pixelSpacing","draw","i","length","toolColors","getColorIfActive","handleOptions","drawHandlesIfActive","setShadow","drawEllipse","drawHandles","cachedStats","_throttledUpdateCachedStats","_updateCachedStats","max","textBoxAnchorPoints","_findTextBoxAnchorPoints","textBoxContent","_createTextBoxContent","drawLinkedTextBox","BaseAnnotationTool","throttle","stats","_calculateStats","startHandle","endHandle","_getEllipseImageCoordinates","isColorImage","area","mean","stdDev","meanStdDevSUV","showMinMax","showHounsfieldUnits","textLines","otherLines","hasStandardUptakeValues","suffix","meanString","numbersWithCommas","toFixed","stdDevString","SUVtext","meanSuvString","stdDevSuvString","targetStringLength","floor","measureText","push","minString","maxString","_formatArea","forEach","String","fromCharCode","ellipseCoordinates","pixels","getPixels","ellipseMeanStdDev","calculateEllipseStatistics","calculateSUV","count","variance","round","insertOrDelete","freehandUtils","freehandArea","calculateFreehandStatistics","freehandIntersect","FreehandHandleData","FreehandMouseTool","defaultFreehandConfiguration","freehandMouseCursor","isMultiPartTool","_drawing","_dragging","_modifying","_drawingMouseDownCallback","bind","_drawingMouseMoveCallback","_drawingMouseDragCallback","_drawingMouseUpCallback","_drawingMouseDoubleClickCallback","_editMouseUpCallback","_editMouseDragCallback","_drawingTouchStartCallback","_drawingTouchDragCallback","_drawingDoubleTapClickCallback","_editTouchDragCallback","measurementData","points","Error","isPointNearTool","_pointNearHandle","Infinity","distanceI","cornerstoneMath","point","canvasCoords","handleCanvas","toolState","config","fillColor","invalidHandlePlacement","invalidColor","getFillColor","getToolColor","j","lines","polyBoundingBox","mouseLocation","drawJoinedLines","fill","alwaysShowHandles","activeHandleRadius","canComplete","completeHandleRadius","handle","firstHandle","meanStdDev","bounds","right","bottom","call","intercept","slope","isNaN","scaling","freehand","text","textBoxText","moSuffix","meanText","stdDevText","areaText","_startDrawing","_addPoint","preventPropagation","nearby","_pointNearHandleAllTools","event","ctrlKey","handleNearby","moveHandleNearImagePoint","dragOrigin","toolIndex","p","currentHandle","currentTool","_activateModify","_getMouseLocation","_checkInvalidHandleLocation","updateImage","mouseButtonMask","includes","buttons","_drawingDrag","_addPointPencilMode","lastHandlePlaced","_endDrawing","completeDrawing","handleIndex","modify","_getPrevHandleIndex","lastLineIndex","lastLine","_deactivateModify","_dropHandle","currentHandleData","previousHandleData","lastHandleID","createNewMeasurement","_referencedElement","type","EVENTS","MOUSE_DOWN_ACTIVATE","TOUCH_START_ACTIVE","_activateDraw","addToolState","_activeDrawingToolReference","newHandleData","fireModifiedEvent","mousePoint","handleFurtherThanMinimumSpacing","_isDistanceLargerThanSpacing","every","_deactivateDraw","pointInsideBoundingBox","clipToBox","_checkHandlesPencilMode","_checkHandlesPolygonMode","mouseAtOriginHandle","_isDistanceSmallerThanCompleteSpacingCanvas","newHandle","_invalidHandlePencilMode","_isDistanceSmallerThanSpacing","p1","p2","p1Canvas","p2Canvas","_drawingInteractionType","completeHandleRadiusTouch","_compareDistanceToSpacing","comparison","spacing","state","isMultiPartToolActive","hideToolCursor","addEventListener","MOUSE_DOWN","MOUSE_MOVE","MOUSE_DOUBLE_CLICK","MOUSE_DRAG","MOUSE_UP","TOUCH_START","TOUCH_DRAG","TOUCH_END","DOUBLE_TAP","setToolCursor","removeEventListener","isToolLocked","MOUSE_CLICK","_closeToolIfDrawing","modifiedEventData","toolName","triggerEvent","MEASUREMENT_MODIFIED","removeToolState","value","stopImmediatePropagation","stopPropagation","preventDefault","LengthTool","lengthCursor","lineSegDistance","colPixelSpacing","rowImagePixelSpacing","colImagePixelSpacing","drawLine","dx","dy","sqrt","xOffset","midpoint","RectangleRoiTool","rectangleRoiCursor","rect","distanceToPoint","drawRect","_getRectangleImageCoordinates","roiCoordinates","roiMeanStdDev","_calculateRectangleStats","sp","rectangle","sum","sumSquared","index","store","modules","brush","setters","BaseBrushTool","strategies","defaultStrategy","mixins","referencedToolData","updateOnMouseMove","hideDefaultCursor","_startPainting","_paint","_startListeningForMouseUp","_lastImageCoords","isToolActive","renderBrush","drawId","colormap","colors","getColormap","colorMapId","colorArray","getColor","_mouseUpRender","_stopListeningForMouseUp","numberOfColors","constructor","getNumberOfColors","drawColorId","oldRadius","radius","newRadius","segIndex","enabledElement","_getEnabledElement","enabledElementUID","uuid","brushVisibilityForElement","getEnabledElement","alpha","hiddenButActiveAlpha","getters","enabledElementByUID","stackToolState","imageIds","globalImageIdSpecificToolStateManager","saveToolState","brushData","pixelData","dim","xy","columns","rows","z","xyz","buffer","ArrayBuffer","uint8View","Uint8Array","BaseTool","projectPatientPointToImagePlane","patientPoint","rowCosines","convertToVector3","columnCosines","imagePositionPatient","clone","sub","dot","imagePointToPatientPoint","imagePoint","multiplyScalar","add","getRectangleFromImagePlane","topLeft","topRight","bottomLeft","bottomRight","Line3","lineRectangleIntersection","line","intersections","keys","side","segment","intersection","intersectLine","planePlaneIntersection","targetImagePlane","referenceImagePlane","targetRowCosines","targetColumnCosines","targetImagePositionPatient","referenceRowCosines","referenceColumnCosines","referenceImagePositionPatient","targetNormal","cross","targetPlane","Plane","setFromNormalAndCoplanarPoint","referenceNormal","referencePlane","originDirection","intersectPlane","origin","direction","distanceTo","angleRadians","rotatedX","cos","sin","rotatedY"],"mappings":"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","file":"cornerstoneTools.6852ffc96d2f8a5f9aa0.hot-update.js","sourcesContent":["import external from './../externalModules.js';\nimport path from './path.js';\nimport { rotatePoint } from '../util/pointProjector.js';\n\n/**\n * Draw an ellipse within the bounding box defined by `corner1` and `corner2`.\n * @public\n * @method drawEllipse\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @param {Number} initialRotation - Ellipse initial rotation\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  corner1,\n  corner2,\n  options,\n  coordSystem = 'pixel',\n  initialRotation = 0.0\n) {\n  if (coordSystem === 'pixel') {\n    corner1 = external.cornerstone.pixelToCanvas(element, corner1);\n    corner2 = external.cornerstone.pixelToCanvas(element, corner2);\n  }\n\n  const viewport = external.cornerstone.getViewport(element);\n\n  // Calculate the center of the image\n  const { clientWidth: width, clientHeight: height } = element;\n  const { scale, translation } = viewport;\n  const rotation = viewport.rotation - initialRotation;\n\n  const centerPoint = {\n    x: width / 2 + translation.x * scale,\n    y: height / 2 + translation.y * scale,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, -rotation);\n    corner2 = rotatePoint(corner2, centerPoint, -rotation);\n  }\n  const w = Math.abs(corner1.x - corner2.x);\n  const h = Math.abs(corner1.y - corner2.y);\n  const xMin = Math.min(corner1.x, corner2.x);\n  const yMin = Math.min(corner1.y, corner2.y);\n\n  let center = { x: xMin + w / 2, y: yMin + h / 2 };\n\n  if (Math.abs(rotation) > 0.05) {\n    center = rotatePoint(center, centerPoint, rotation);\n  }\n  const angle = (rotation * Math.PI) / 180;\n\n  path(context, options, context => {\n    context.ellipse(center.x, center.y, w / 2, h / 2, angle, 0, 2 * Math.PI);\n    context.closePath();\n  });\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\nimport { rotatePoint } from '../util/pointProjector.js';\n\n/**\n * Draw a rectangle defined by `corner1` and `corner2`.\n * @public\n * @method drawRect\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @param {Number} initialRotation - Rectangle initial rotation\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  corner1,\n  corner2,\n  options,\n  coordSystem = 'pixel',\n  initialRotation = 0.0\n) {\n  if (coordSystem === 'pixel') {\n    const cornerstone = external.cornerstone;\n\n    corner1 = cornerstone.pixelToCanvas(element, corner1);\n    corner2 = cornerstone.pixelToCanvas(element, corner2);\n  }\n\n  const viewport = external.cornerstone.getViewport(element);\n\n  // Calculate the center of the image\n  const { clientWidth: width, clientHeight: height } = element;\n  const { scale, translation } = viewport;\n  const rotation = viewport.rotation - initialRotation;\n\n  const centerPoint = {\n    x: width / 2 + translation.x * scale,\n    y: height / 2 + translation.y * scale,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, -rotation);\n    corner2 = rotatePoint(corner2, centerPoint, -rotation);\n  }\n\n  const w = Math.abs(corner1.x - corner2.x);\n  const h = Math.abs(corner1.y - corner2.y);\n\n  corner1 = {\n    x: Math.min(corner1.x, corner2.x),\n    y: Math.min(corner1.y, corner2.y),\n  };\n\n  corner2 = {\n    x: corner1.x + w,\n    y: corner1.y + h,\n  };\n\n  let corner3 = {\n    x: corner1.x + w,\n    y: corner1.y,\n  };\n\n  let corner4 = {\n    x: corner1.x,\n    y: corner1.y + h,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, rotation);\n    corner2 = rotatePoint(corner2, centerPoint, rotation);\n    corner3 = rotatePoint(corner3, centerPoint, rotation);\n    corner4 = rotatePoint(corner4, centerPoint, rotation);\n  }\n\n  path(context, options, context => {\n    context.moveTo(corner1.x, corner1.y);\n    context.lineTo(corner3.x, corner3.y);\n    context.moveTo(corner3.x, corner3.y);\n    context.lineTo(corner2.x, corner2.y);\n    context.moveTo(corner2.x, corner2.y);\n    context.lineTo(corner4.x, corner4.y);\n    context.moveTo(corner4.x, corner4.y);\n    context.lineTo(corner1.x, corner1.y);\n  });\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawEllipse,\n  drawHandles,\n  drawLinkedTextBox,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport {\n  pointInEllipse,\n  calculateEllipseStatistics,\n} from './../../util/ellipse/index.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { ellipticalRoiCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:EllipticalRoiTool');\n\n/**\n * @public\n * @class EllipticalRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing elliptical regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class EllipticalRoiTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'EllipticalRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        // showMinMax: false,\n        // showHounsfieldUnits: true,\n      },\n      svgCursor: ellipticalRoiCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        initialRotation: eventData.viewport.rotation,\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    const minorEllipse = {\n      left: Math.min(startCanvas.x, endCanvas.x) + distance / 2,\n      top: Math.min(startCanvas.y, endCanvas.y) + distance / 2,\n      width: Math.abs(startCanvas.x - endCanvas.x) - distance,\n      height: Math.abs(startCanvas.y - endCanvas.y) - distance,\n    };\n\n    const majorEllipse = {\n      left: Math.min(startCanvas.x, endCanvas.x) - distance / 2,\n      top: Math.min(startCanvas.y, endCanvas.y) - distance / 2,\n      width: Math.abs(startCanvas.x - endCanvas.x) + distance,\n      height: Math.abs(startCanvas.y - endCanvas.y) + distance,\n    };\n\n    const pointInMinorEllipse = pointInEllipse(minorEllipse, coords);\n    const pointInMajorEllipse = pointInEllipse(majorEllipse, coords);\n\n    if (pointInMajorEllipse && !pointInMinorEllipse) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const { image, element } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    let imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing =\n      imagePlane && imagePlane.rowPixelSpacing && imagePlane.columnPixelSpacing;\n\n    imagePlane = imagePlane || {};\n    const pixelSpacing = {\n      rowPixelSpacing: imagePlane.rowPixelSpacing || 1,\n      columnPixelSpacing: imagePlane.columnPixelSpacing || 1,\n    };\n\n    draw(context, context => {\n      // If we have tool data for this element - iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        // Draw\n        drawEllipse(\n          context,\n          element,\n          data.handles.start,\n          data.handles.end,\n          {\n            color,\n          },\n          'pixel',\n          data.handles.initialRotation\n        );\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            _throttledUpdateCachedStats(\n              image,\n              element,\n              data,\n              modality,\n              pixelSpacing\n            );\n          } else {\n            _updateCachedStats(image, element, data, modality, pixelSpacing);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          data.handles.textBox.x = Math.max(\n            data.handles.start.x,\n            data.handles.end.x\n          );\n          data.handles.textBox.y =\n            (data.handles.start.y + data.handles.end.y) / 2;\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          0,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n *\n */\nconst _throttledUpdateCachedStats = throttle(_updateCachedStats, 110);\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} data\n * @param {string} modality\n * @param {*} pixelSpacing\n * @returns {void}\n */\nfunction _updateCachedStats(image, element, data, modality, pixelSpacing) {\n  const stats = _calculateStats(\n    image,\n    element,\n    data.handles,\n    modality,\n    pixelSpacing\n  );\n\n  data.cachedStats = stats;\n  data.invalidated = false;\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = _getEllipseImageCoordinates(\n    startHandle,\n    endHandle\n  );\n\n  return [\n    {\n      // Top middle point of ellipse\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of ellipse\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of ellipse\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of ellipse\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\n/**\n *\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}] - { showMinMax, showHounsfieldUnits }\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV } = {},\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const showHounsfieldUnits = options.showHounsfieldUnits !== false;\n  const textLines = [];\n\n  // Don't display mean/standardDev for color images\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const suffix = modality === 'CT' && showHounsfieldUnits ? ' HU' : '';\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))}${suffix}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )}${suffix}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min}${suffix}`;\n      const maxString = `Max: ${max}${suffix}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the ellipse in image coordinates\n  const ellipseCoordinates = _getEllipseImageCoordinates(\n    handles.start,\n    handles.end\n  );\n\n  // Retrieve the array of pixels that the ellipse bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    ellipseCoordinates.left,\n    ellipseCoordinates.top,\n    ellipseCoordinates.width,\n    ellipseCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the ellipse details.\n  const ellipseMeanStdDev = calculateEllipseStatistics(\n    pixels,\n    ellipseCoordinates\n  );\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, ellipseMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, ellipseMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  // Calculate the image area from the ellipse dimensions and pixel spacing\n  const area =\n    Math.PI *\n    ((ellipseCoordinates.width * (pixelSpacing.columnPixelSpacing || 1)) / 2) *\n    ((ellipseCoordinates.height * (pixelSpacing.rowPixelSpacing || 1)) / 2);\n\n  return {\n    area: area || 0,\n    count: ellipseMeanStdDev.count || 0,\n    mean: ellipseMeanStdDev.mean || 0,\n    variance: ellipseMeanStdDev.variance || 0,\n    stdDev: ellipseMeanStdDev.stdDev || 0,\n    min: ellipseMeanStdDev.min || 0,\n    max: ellipseMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n\n/**\n * Retrieve the bounds of the ellipse in image coordinates\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number }}\n */\nfunction _getEllipseImageCoordinates(startHandle, endHandle) {\n  return {\n    left: Math.round(Math.min(startHandle.x, endHandle.x)),\n    top: Math.round(Math.min(startHandle.y, endHandle.y)),\n    width: Math.round(Math.abs(startHandle.x - endHandle.x)),\n    height: Math.round(Math.abs(startHandle.y - endHandle.y)),\n  };\n}\n","import EVENTS from './../../events.js';\nimport external from './../../externalModules.js';\nimport BaseAnnotationTool from './../base/BaseAnnotationTool.js';\n// State\nimport {\n  addToolState,\n  getToolState,\n  removeToolState,\n} from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\nimport { state } from '../../store/index.js';\n// Manipulators\nimport { moveHandleNearImagePoint } from '../../util/findAndMoveHelpers.js';\n// Implementation Logic\nimport pointInsideBoundingBox from '../../util/pointInsideBoundingBox.js';\nimport calculateSUV from '../../util/calculateSUV.js';\nimport numbersWithCommas from '../../util/numbersWithCommas.js';\n\n// Drawing\nimport { getNewContext, draw, drawJoinedLines } from '../../drawing/index.js';\nimport drawLinkedTextBox from '../../drawing/drawLinkedTextBox.js';\nimport drawHandles from '../../drawing/drawHandles.js';\nimport { clipToBox } from '../../util/clip.js';\nimport { hideToolCursor, setToolCursor } from '../../store/setToolCursor.js';\nimport { freehandMouseCursor } from '../cursors/index.js';\nimport freehandUtils from '../../util/freehand/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:FreehandMouseTool');\n\nconst {\n  insertOrDelete,\n  freehandArea,\n  calculateFreehandStatistics,\n  freehandIntersect,\n  FreehandHandleData,\n} = freehandUtils;\n\n/**\n * @public\n * @class FreehandMouseTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing arbitrary polygonal regions of interest, and\n * measuring the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class FreehandMouseTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'FreehandMouse',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: defaultFreehandConfiguration(),\n      svgCursor: freehandMouseCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n\n    this.initialConfiguration = initialConfiguration;\n    this.isMultiPartTool = true;\n\n    this._drawing = false;\n    this._dragging = false;\n    this._modifying = false;\n\n    // Create bound callback functions for private event loops\n    this._drawingMouseDownCallback = this._drawingMouseDownCallback.bind(this);\n    this._drawingMouseMoveCallback = this._drawingMouseMoveCallback.bind(this);\n    this._drawingMouseDragCallback = this._drawingMouseDragCallback.bind(this);\n    this._drawingMouseUpCallback = this._drawingMouseUpCallback.bind(this);\n    this._drawingMouseDoubleClickCallback = this._drawingMouseDoubleClickCallback.bind(\n      this\n    );\n    this._editMouseUpCallback = this._editMouseUpCallback.bind(this);\n    this._editMouseDragCallback = this._editMouseDragCallback.bind(this);\n\n    this._drawingTouchStartCallback = this._drawingTouchStartCallback.bind(\n      this\n    );\n    this._drawingTouchDragCallback = this._drawingTouchDragCallback.bind(this);\n    this._drawingDoubleTapClickCallback = this._drawingDoubleTapClickCallback.bind(\n      this\n    );\n    this._editTouchDragCallback = this._editTouchDragCallback.bind(this);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const measurementData = {\n      visible: true,\n      active: true,\n      invalidated: true,\n      color: undefined,\n      handles: {\n        points: [],\n      },\n    };\n\n    measurementData.handles.textBox = {\n      active: false,\n      hasMoved: false,\n      movesIndependently: false,\n      drawnIndependently: true,\n      allowedOutsideImage: true,\n      hasBoundingBox: true,\n    };\n\n    return measurementData;\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const validParameters = data && data.handles && data.handles.points;\n\n    if (!validParameters) {\n      throw new Error(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const isPointNearTool = this._pointNearHandle(element, data, coords);\n\n    if (isPointNearTool !== undefined) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {number} the distance in px from the provided coordinates to the\n   * closest rendered portion of the annotation. -1 if the distance cannot be\n   * calculated.\n   */\n  distanceFromPoint(element, data, coords) {\n    let distance = Infinity;\n\n    for (let i = 0; i < data.handles.points.length; i++) {\n      const distanceI = external.cornerstoneMath.point.distance(\n        data.handles.points[i],\n        coords\n      );\n\n      distance = Math.min(distance, distanceI);\n    }\n\n    // If an error caused distance not to be calculated, return -1.\n    if (distance === Infinity) {\n      return -1;\n    }\n\n    return distance;\n  }\n\n  /**\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {number} the distance in canvas units from the provided coordinates to the\n   * closest rendered portion of the annotation. -1 if the distance cannot be\n   * calculated.\n   */\n  distanceFromPointCanvas(element, data, coords) {\n    let distance = Infinity;\n\n    if (!data) {\n      return -1;\n    }\n\n    const canvasCoords = external.cornerstone.pixelToCanvas(element, coords);\n\n    const points = data.handles.points;\n\n    for (let i = 0; i < points.length; i++) {\n      const handleCanvas = external.cornerstone.pixelToCanvas(\n        element,\n        points[i]\n      );\n\n      const distanceI = external.cornerstoneMath.point.distance(\n        handleCanvas,\n        canvasCoords\n      );\n\n      distance = Math.min(distance, distanceI);\n    }\n\n    // If an error caused distance not to be calculated, return -1.\n    if (distance === Infinity) {\n      return -1;\n    }\n\n    return distance;\n  }\n\n  /**\n   *\n   *\n   * @param {*} evt\n   * @returns {undefined}\n   */\n  renderToolData(evt) {\n    const eventData = evt.detail;\n\n    // If we have no toolState for this element, return immediately as there is nothing to do\n    const toolState = getToolState(evt.currentTarget, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    const { image, element } = eventData;\n    const config = this.configuration;\n    const seriesModule = external.cornerstone.metaData.get(\n      'generalSeriesModule',\n      image.imageId\n    );\n    const modality = seriesModule ? seriesModule.modality : null;\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        let color = toolColors.getColorIfActive(data);\n        let fillColor;\n\n        if (data.active) {\n          if (data.handles.invalidHandlePlacement) {\n            color = config.invalidColor;\n            fillColor = config.invalidColor;\n          } else {\n            color = toolColors.getColorIfActive(data);\n            fillColor = toolColors.getFillColor();\n          }\n        } else {\n          fillColor = toolColors.getToolColor();\n        }\n\n        if (data.handles.points.length) {\n          for (let j = 0; j < data.handles.points.length; j++) {\n            const lines = [...data.handles.points[j].lines];\n            const points = data.handles.points;\n\n            if (j === points.length - 1 && !data.polyBoundingBox) {\n              // If it's still being actively drawn, keep the last line to\n              // The mouse location\n              lines.push(config.mouseLocation.handles.start);\n            }\n            drawJoinedLines(\n              context,\n              eventData.element,\n              data.handles.points[j],\n              lines,\n              { color }\n            );\n          }\n        }\n\n        // Draw handles\n\n        const options = {\n          color,\n          fill: fillColor,\n        };\n\n        if (config.alwaysShowHandles || (data.active && data.polyBoundingBox)) {\n          // Render all handles\n          options.handleRadius = config.activeHandleRadius;\n          drawHandles(context, eventData, data.handles.points, options);\n        }\n\n        if (data.canComplete) {\n          // Draw large handle at the origin if can complete drawing\n          options.handleRadius = config.completeHandleRadius;\n          const handle = data.handles.points[0];\n\n          drawHandles(context, eventData, [handle], options);\n        }\n\n        if (data.active && !data.polyBoundingBox) {\n          // Draw handle at origin and at mouse if actively drawing\n          options.handleRadius = config.activeHandleRadius;\n          drawHandles(\n            context,\n            eventData,\n            config.mouseLocation.handles,\n            options\n          );\n\n          const firstHandle = data.handles.points[0];\n\n          drawHandles(context, eventData, [firstHandle], options);\n        }\n\n        // Define variables for the area and mean/standard deviation\n        let area, meanStdDev, meanStdDevSUV;\n\n        // Perform a check to see if the tool has been invalidated. This is to prevent\n        // Unnecessary re-calculation of the area, mean, and standard deviation if the\n        // Image is re-rendered but the tool has not moved (e.g. during a zoom)\n        if (data.invalidated === false) {\n          // If the data is not invalidated, retrieve it from the toolState\n          meanStdDev = data.meanStdDev;\n          meanStdDevSUV = data.meanStdDevSUV;\n          area = data.area;\n        } else if (!data.active) {\n          const points = data.handles.points;\n          // If the data has been invalidated, and the tool is not currently active,\n          // We need to calculate it again.\n\n          // Retrieve the bounds of the ROI in image coordinates\n          const bounds = {\n            left: points[0].x,\n            right: points[0].x,\n            bottom: points[0].y,\n            top: points[0].x,\n          };\n\n          for (let i = 0; i < points.length; i++) {\n            bounds.left = Math.min(bounds.left, points[i].x);\n            bounds.right = Math.max(bounds.right, points[i].x);\n            bounds.bottom = Math.min(bounds.bottom, points[i].y);\n            bounds.top = Math.max(bounds.top, points[i].y);\n          }\n\n          const polyBoundingBox = {\n            left: bounds.left,\n            top: bounds.bottom,\n            width: Math.abs(bounds.right - bounds.left),\n            height: Math.abs(bounds.top - bounds.bottom),\n          };\n\n          // Store the bounding box information for the text box\n          data.polyBoundingBox = polyBoundingBox;\n\n          // First, make sure this is not a color image, since no mean / standard\n          // Deviation will be calculated for color images.\n          if (!image.color) {\n            // Retrieve the array of pixels that the ROI bounds cover\n            const pixels = external.cornerstone.getPixels(\n              element,\n              polyBoundingBox.left,\n              polyBoundingBox.top,\n              polyBoundingBox.width,\n              polyBoundingBox.height\n            );\n\n            // Calculate the mean & standard deviation from the pixels and the object shape\n            meanStdDev = calculateFreehandStatistics.call(\n              this,\n              pixels,\n              polyBoundingBox,\n              data.handles.points\n            );\n\n            if (modality === 'PT') {\n              // If the image is from a PET scan, use the DICOM tags to\n              // Calculate the SUV from the mean and standard deviation.\n\n              // Note that because we are using modality pixel values from getPixels, and\n              // The calculateSUV routine also rescales to modality pixel values, we are first\n              // Returning the values to storedPixel values before calcuating SUV with them.\n              // TODO: Clean this up? Should we add an option to not scale in calculateSUV?\n              meanStdDevSUV = {\n                mean: calculateSUV(\n                  image,\n                  (meanStdDev.mean - image.intercept) / image.slope\n                ),\n                stdDev: calculateSUV(\n                  image,\n                  (meanStdDev.stdDev - image.intercept) / image.slope\n                ),\n              };\n            }\n\n            // If the mean and standard deviation values are sane, store them for later retrieval\n            if (meanStdDev && !isNaN(meanStdDev.mean)) {\n              data.meanStdDev = meanStdDev;\n              data.meanStdDevSUV = meanStdDevSUV;\n            }\n          }\n\n          // Retrieve the pixel spacing values, and if they are not\n          // Real non-zero values, set them to 1\n          const columnPixelSpacing = image.columnPixelSpacing || 1;\n          const rowPixelSpacing = image.rowPixelSpacing || 1;\n          const scaling = columnPixelSpacing * rowPixelSpacing;\n\n          area = freehandArea(data.handles.points, scaling);\n\n          // If the area value is sane, store it for later retrieval\n          if (!isNaN(area)) {\n            data.area = area;\n          }\n\n          // Set the invalidated flag to false so that this data won't automatically be recalculated\n          data.invalidated = false;\n        }\n\n        // Only render text if polygon ROI has been completed and freehand 'shiftKey' mode was not used:\n        if (data.polyBoundingBox && !data.handles.textBox.freehand) {\n          // If the textbox has not been moved by the user, it should be displayed on the right-most\n          // Side of the tool.\n          if (!data.handles.textBox.hasMoved) {\n            // Find the rightmost side of the polyBoundingBox at its vertical center, and place the textbox here\n            // Note that this calculates it in image coordinates\n            data.handles.textBox.x =\n              data.polyBoundingBox.left + data.polyBoundingBox.width;\n            data.handles.textBox.y =\n              data.polyBoundingBox.top + data.polyBoundingBox.height / 2;\n          }\n\n          const text = textBoxText.call(this, data);\n\n          drawLinkedTextBox(\n            context,\n            element,\n            data.handles.textBox,\n            text,\n            data.handles.points,\n            textBoxAnchorPoints,\n            color,\n            lineWidth,\n            0,\n            true\n          );\n        }\n      });\n    }\n\n    function textBoxText(data) {\n      const { meanStdDev, meanStdDevSUV, area } = data;\n      // Define an array to store the rows of text for the textbox\n      const textLines = [];\n\n      // If the mean and standard deviation values are present, display them\n      if (meanStdDev && meanStdDev.mean !== undefined) {\n        // If the modality is CT, add HU to denote Hounsfield Units\n        let moSuffix = '';\n\n        if (modality === 'CT') {\n          moSuffix = ' HU';\n        }\n\n        // Create a line of text to display the mean and any units that were specified (i.e. HU)\n        let meanText = `Mean: ${numbersWithCommas(\n          meanStdDev.mean.toFixed(2)\n        )}${moSuffix}`;\n        // Create a line of text to display the standard deviation and any units that were specified (i.e. HU)\n        let stdDevText = `StdDev: ${numbersWithCommas(\n          meanStdDev.stdDev.toFixed(2)\n        )}${moSuffix}`;\n\n        // If this image has SUV values to display, concatenate them to the text line\n        if (meanStdDevSUV && meanStdDevSUV.mean !== undefined) {\n          const SUVtext = ' SUV: ';\n\n          meanText +=\n            SUVtext + numbersWithCommas(meanStdDevSUV.mean.toFixed(2));\n          stdDevText +=\n            SUVtext + numbersWithCommas(meanStdDevSUV.stdDev.toFixed(2));\n        }\n\n        // Add these text lines to the array to be displayed in the textbox\n        textLines.push(meanText);\n        textLines.push(stdDevText);\n      }\n\n      // If the area is a sane value, display it\n      if (area) {\n        // Determine the area suffix based on the pixel spacing in the image.\n        // If pixel spacing is present, use millimeters. Otherwise, use pixels.\n        // This uses Char code 178 for a superscript 2\n        let suffix = ` mm${String.fromCharCode(178)}`;\n\n        if (!image.rowPixelSpacing || !image.columnPixelSpacing) {\n          suffix = ` pixels${String.fromCharCode(178)}`;\n        }\n\n        // Create a line of text to display the area and its units\n        const areaText = `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n\n        // Add this text line to the array to be displayed in the textbox\n        textLines.push(areaText);\n      }\n\n      return textLines;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      return handles;\n    }\n  }\n\n  addNewMeasurement(evt) {\n    const eventData = evt.detail;\n\n    this._startDrawing(evt);\n    this._addPoint(eventData);\n\n    preventPropagation(evt);\n  }\n\n  preMouseDownCallback(evt) {\n    const eventData = evt.detail;\n    const nearby = this._pointNearHandleAllTools(eventData);\n\n    if (eventData.event.ctrlKey) {\n      if (nearby !== undefined && nearby.handleNearby.hasBoundingBox) {\n        // Ctrl + clicked textBox, do nothing but still consume event.\n      } else {\n        insertOrDelete.call(this, evt, nearby);\n      }\n\n      preventPropagation(evt);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  handleSelectedCallback(evt, toolData, handle, interactionType = 'mouse') {\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const toolState = getToolState(eventData.element, this.name);\n\n    if (handle.hasBoundingBox) {\n      // Use default move handler.\n      moveHandleNearImagePoint(evt, this, toolData, handle, interactionType);\n\n      return;\n    }\n\n    const config = this.configuration;\n\n    config.dragOrigin = {\n      x: handle.x,\n      y: handle.y,\n    };\n\n    // Iterating over handles of all toolData instances to find the indices of the selected handle\n    for (let toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {\n      const points = toolState.data[toolIndex].handles.points;\n\n      for (let p = 0; p < points.length; p++) {\n        if (points[p] === handle) {\n          config.currentHandle = p;\n          config.currentTool = toolIndex;\n        }\n      }\n    }\n\n    this._modifying = true;\n\n    this._activateModify(element);\n\n    // Interupt eventDispatchers\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for MOUSE_MOVE during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseMoveCallback(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const toolState = getToolState(eventData.element, this.name);\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n\n    const data = toolState.data[currentTool];\n    const coords = eventData.currentPoints.canvas;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n    this._checkInvalidHandleLocation(data, eventData);\n\n    // Mouse move -> Polygon Mode\n    const handleNearby = this._pointNearHandle(element, data, coords);\n    const points = data.handles.points;\n    // If there is a handle nearby to snap to\n    // (and it's not the actual mouse handle)\n\n    if (\n      handleNearby !== undefined &&\n      !handleNearby.hasBoundingBox &&\n      handleNearby < points.length - 1\n    ) {\n      config.mouseLocation.handles.start.x = points[handleNearby].x;\n      config.mouseLocation.handles.start.y = points[handleNearby].y;\n    }\n\n    // Force onImageRendered\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Event handler for MOUSE_DRAG during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDragCallback(evt) {\n    if (!this.options.mouseButtonMask.includes(evt.detail.buttons)) {\n      return;\n    }\n\n    this._drawingDrag(evt);\n  }\n\n  /**\n   * Event handler for TOUCH_DRAG during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingTouchDragCallback(evt) {\n    this._drawingDrag(evt);\n  }\n\n  _drawingDrag(evt) {\n    const eventData = evt.detail;\n\n    const toolState = getToolState(eventData.element, this.name);\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n\n    const data = toolState.data[currentTool];\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n    this._checkInvalidHandleLocation(data, eventData);\n    this._addPointPencilMode(eventData, data.handles.points);\n    this._dragging = true;\n\n    // Force onImageRendered\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Event handler for MOUSE_UP during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseUpCallback(evt) {\n    const eventData = evt.detail;\n\n    if (!this._dragging) {\n      return;\n    }\n\n    this._dragging = false;\n\n    const element = eventData.element;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(eventData.element, this.name);\n    const data = toolState.data[currentTool];\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /**\n   * Event handler for MOUSE_DOWN during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDownCallback(evt) {\n    const eventData = evt.detail;\n\n    if (!this.options.mouseButtonMask.includes(eventData.buttons)) {\n      return;\n    }\n\n    const element = eventData.element;\n    const coords = eventData.currentPoints.canvas;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(eventData.element, this.name);\n    const data = toolState.data[currentTool];\n\n    const handleNearby = this._pointNearHandle(element, data, coords);\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    } else if (handleNearby === undefined) {\n      this._addPoint(eventData);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /**\n   * Event handler for TOUCH_START during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingTouchStartCallback(evt) {\n    const eventData = evt.detail;\n\n    const element = eventData.element;\n    const coords = eventData.currentPoints.canvas;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(eventData.element, this.name);\n    const data = toolState.data[currentTool];\n\n    const handleNearby = this._pointNearHandle(element, data, coords);\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    } else if (handleNearby === undefined) {\n      this._addPoint(eventData);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /** Ends the active drawing loop and completes the polygon.\n   *\n   * @public\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @returns {null}\n   */\n  completeDrawing(element) {\n    if (!this._drawing) {\n      return;\n    }\n    const toolState = getToolState(element, this.name);\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    if (\n      !freehandIntersect.end(data.handles.points) &&\n      data.handles.points.length >= 2\n    ) {\n      const lastHandlePlaced = config.currentHandle;\n\n      data.polyBoundingBox = {};\n      this._endDrawing(element, lastHandlePlaced);\n    }\n  }\n\n  /**\n   * Event handler for MOUSE_DOUBLE_CLICK during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDoubleClickCallback(evt) {\n    const eventData = evt.detail;\n\n    this.completeDrawing(eventData.element);\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for DOUBLE_TAP during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingDoubleTapClickCallback(evt) {\n    const eventData = evt.detail;\n\n    this.completeDrawing(eventData.element);\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for MOUSE_DRAG during handle drag event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _editMouseDragCallback(evt) {\n    const eventData = evt.detail;\n\n    if (!this.options.mouseButtonMask.includes(eventData.buttons)) {\n      return;\n    }\n\n    const toolState = getToolState(eventData.element, this.name);\n\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n    const currentHandle = config.currentHandle;\n    const points = data.handles.points;\n    let handleIndex = -1;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n\n    data.handles.invalidHandlePlacement = freehandIntersect.modify(\n      points,\n      currentHandle\n    );\n    data.active = true;\n    data.highlight = true;\n    points[currentHandle].x = config.mouseLocation.handles.start.x;\n    points[currentHandle].y = config.mouseLocation.handles.start.y;\n\n    handleIndex = this._getPrevHandleIndex(currentHandle, points);\n\n    if (currentHandle >= 0) {\n      const lastLineIndex = points[handleIndex].lines.length - 1;\n      const lastLine = points[handleIndex].lines[lastLineIndex];\n\n      lastLine.x = config.mouseLocation.handles.start.x;\n      lastLine.y = config.mouseLocation.handles.start.y;\n    }\n\n    // Update the image\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Event handler for TOUCH_DRAG during handle drag event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   */\n  _editTouchDragCallback(evt) {\n    const eventData = evt.detail;\n\n    const toolState = getToolState(eventData.element, this.name);\n\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n    const currentHandle = config.currentHandle;\n    const points = data.handles.points;\n    let handleIndex = -1;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n\n    data.handles.invalidHandlePlacement = freehandIntersect.modify(\n      points,\n      currentHandle\n    );\n    data.active = true;\n    data.highlight = true;\n    points[currentHandle].x = config.mouseLocation.handles.start.x;\n    points[currentHandle].y = config.mouseLocation.handles.start.y;\n\n    handleIndex = this._getPrevHandleIndex(currentHandle, points);\n\n    if (currentHandle >= 0) {\n      const lastLineIndex = points[handleIndex].lines.length - 1;\n      const lastLine = points[handleIndex].lines[lastLineIndex];\n\n      lastLine.x = config.mouseLocation.handles.start.x;\n      lastLine.y = config.mouseLocation.handles.start.y;\n    }\n\n    // Update the image\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Returns the previous handle to the current one.\n   * @param {Number} currentHandle - the current handle index\n   * @param {Array} points - the handles Array of the freehand data\n   * @returns {Number} - The index of the previos handle\n   */\n  _getPrevHandleIndex(currentHandle, points) {\n    if (currentHandle === 0) {\n      return points.length - 1;\n    }\n\n    return currentHandle - 1;\n  }\n\n  /**\n   * Event handler for MOUSE_UP during handle drag event loop.\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _editMouseUpCallback(evt) {\n    const eventData = evt.detail;\n\n    const element = eventData.element;\n    const toolState = getToolState(eventData.element, this.name);\n\n    this._deactivateModify(element);\n\n    this._dropHandle(eventData, toolState);\n    this._endDrawing(element);\n\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Places a handle of the freehand tool if the new location is valid.\n   * If the new location is invalid the handle snaps back to its previous position.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @param {Object} toolState - The data associated with the freehand tool.\n   * @modifies {toolState}\n   * @returns {undefined}\n   */\n  _dropHandle(eventData, toolState) {\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const handles = toolState.data[currentTool].handles;\n    const points = handles.points;\n\n    // Don't allow the line being modified to intersect other lines\n    if (handles.invalidHandlePlacement) {\n      const currentHandle = config.currentHandle;\n      const currentHandleData = points[currentHandle];\n      let previousHandleData;\n\n      if (currentHandle === 0) {\n        const lastHandleID = points.length - 1;\n\n        previousHandleData = points[lastHandleID];\n      } else {\n        previousHandleData = points[currentHandle - 1];\n      }\n\n      // Snap back to previous position\n      currentHandleData.x = config.dragOrigin.x;\n      currentHandleData.y = config.dragOrigin.y;\n      previousHandleData.lines[0] = currentHandleData;\n\n      handles.invalidHandlePlacement = false;\n    }\n  }\n\n  /**\n   * Begining of drawing loop when tool is active and a click event happens far\n   * from existing handles.\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _startDrawing(evt) {\n    const eventData = evt.detail;\n    const measurementData = this.createNewMeasurement(eventData);\n    const element = eventData.element;\n    const config = this.configuration;\n\n    this._referencedElement = element;\n\n    let interactionType;\n\n    if (evt.type === EVENTS.MOUSE_DOWN_ACTIVATE) {\n      interactionType = 'Mouse';\n    } else if (evt.type === EVENTS.TOUCH_START_ACTIVE) {\n      interactionType = 'Touch';\n    }\n    this._activateDraw(element, interactionType);\n    this._getMouseLocation(eventData);\n\n    addToolState(eventData.element, this.name, measurementData);\n\n    const toolState = getToolState(eventData.element, this.name);\n\n    config.currentTool = toolState.data.length - 1;\n\n    this._activeDrawingToolReference = toolState.data[config.currentTool];\n  }\n\n  /**\n   * Adds a point on mouse click in polygon mode.\n   *\n   * @private\n   * @param {Object} eventData - data object associated with an event.\n   * @returns {undefined}\n   */\n  _addPoint(eventData) {\n    const toolState = getToolState(eventData.element, this.name);\n\n    // Get the toolState from the last-drawn polygon\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    if (data.handles.invalidHandlePlacement) {\n      return;\n    }\n\n    const newHandleData = new FreehandHandleData(eventData.currentPoints.image);\n\n    // If this is not the first handle\n    if (data.handles.points.length) {\n      // Add the line from the current handle to the new handle\n      data.handles.points[config.currentHandle - 1].lines.push(\n        eventData.currentPoints.image\n      );\n    }\n\n    // Add the new handle\n    data.handles.points.push(newHandleData);\n\n    // Increment the current handle value\n    config.currentHandle += 1;\n\n    // Force onImageRendered to fire\n    external.cornerstone.updateImage(eventData.element);\n    this.fireModifiedEvent(eventData.element, data);\n  }\n\n  /**\n   * If in pencilMode, check the mouse position is farther than the minimum\n   * distance between points, then add a point.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with an event.\n   * @param {Object} points - Data object associated with the tool.\n   * @returns {undefined}\n   */\n  _addPointPencilMode(eventData, points) {\n    const config = this.configuration;\n    const element = eventData.element;\n    const mousePoint = config.mouseLocation.handles.start;\n\n    const handleFurtherThanMinimumSpacing = handle =>\n      this._isDistanceLargerThanSpacing(element, handle, mousePoint);\n\n    if (points.every(handleFurtherThanMinimumSpacing)) {\n      this._addPoint(eventData);\n    }\n  }\n\n  /**\n   * Ends the active drawing loop and completes the polygon.\n   *\n   * @private\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @param {Object} handleNearby - the handle nearest to the mouse cursor.\n   * @returns {undefined}\n   */\n  _endDrawing(element, handleNearby) {\n    const toolState = getToolState(element, this.name);\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Connect the end handle to the origin handle\n    if (handleNearby !== undefined) {\n      const points = data.handles.points;\n\n      points[config.currentHandle - 1].lines.push(points[0]);\n    }\n\n    if (this._modifying) {\n      this._modifying = false;\n      data.invalidated = true;\n    }\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    if (this._drawing) {\n      this._deactivateDraw(element);\n    }\n\n    external.cornerstone.updateImage(element);\n\n    this.fireModifiedEvent(element, data);\n  }\n\n  /**\n   * Returns a handle of a particular tool if it is close to the mouse cursor\n   *\n   * @private\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @param {Object} data      Data object associated with the tool.\n   * @param {*} coords\n   * @returns {Number|Object|Boolean}\n   */\n  _pointNearHandle(element, data, coords) {\n    if (data.handles === undefined || data.handles.points === undefined) {\n      return;\n    }\n\n    if (data.visible === false) {\n      return;\n    }\n\n    for (let i = 0; i < data.handles.points.length; i++) {\n      const handleCanvas = external.cornerstone.pixelToCanvas(\n        element,\n        data.handles.points[i]\n      );\n\n      if (external.cornerstoneMath.point.distance(handleCanvas, coords) < 6) {\n        return i;\n      }\n    }\n\n    // Check to see if mouse in bounding box of textbox\n    if (data.handles.textBox) {\n      if (pointInsideBoundingBox(data.handles.textBox, coords)) {\n        return data.handles.textBox;\n      }\n    }\n  }\n\n  /**\n   * Returns a handle if it is close to the mouse cursor (all tools)\n   *\n   * @private\n   * @param {Object} eventData - data object associated with an event.\n   * @returns {Object}\n   */\n  _pointNearHandleAllTools(eventData) {\n    const element = eventData.element;\n    const coords = eventData.currentPoints.canvas;\n    const toolState = getToolState(element, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    let handleNearby;\n\n    for (let toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {\n      handleNearby = this._pointNearHandle(\n        element,\n        toolState.data[toolIndex],\n        coords\n      );\n      if (handleNearby !== undefined) {\n        return {\n          handleNearby,\n          toolIndex,\n        };\n      }\n    }\n  }\n\n  /**\n   * Gets the current mouse location and stores it in the configuration object.\n   *\n   * @private\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {undefined}\n   */\n  _getMouseLocation(eventData) {\n    // Set the mouseLocation handle\n    const config = this.configuration;\n\n    config.mouseLocation.handles.start.x = eventData.currentPoints.image.x;\n    config.mouseLocation.handles.start.y = eventData.currentPoints.image.y;\n    clipToBox(config.mouseLocation.handles.start, eventData.image);\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid.\n   *\n   * @private\n   * @param {Object} data      Data object associated with the tool.\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {Boolean}\n   */\n  _checkInvalidHandleLocation(data, eventData) {\n    if (data.handles.points.length < 2) {\n      return true;\n    }\n\n    let invalidHandlePlacement;\n\n    if (this._dragging) {\n      invalidHandlePlacement = this._checkHandlesPencilMode(data, eventData);\n    } else {\n      invalidHandlePlacement = this._checkHandlesPolygonMode(data, eventData);\n    }\n\n    data.handles.invalidHandlePlacement = invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid (in polygon mode).\n   *\n   * @private\n   *\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {Boolean}\n   */\n  _checkHandlesPolygonMode(data, eventData) {\n    const config = this.configuration;\n    const element = eventData.element;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n    let invalidHandlePlacement = false;\n\n    data.canComplete = false;\n\n    const mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(\n      element,\n      points[0],\n      mousePoint\n    );\n\n    if (\n      mouseAtOriginHandle &&\n      !freehandIntersect.end(points) &&\n      points.length > 2\n    ) {\n      data.canComplete = true;\n      invalidHandlePlacement = false;\n    } else {\n      invalidHandlePlacement = freehandIntersect.newHandle(mousePoint, points);\n    }\n\n    return invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid (in pencilMode).\n   *\n   * @private\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data associated with the event.\n   * @returns {Boolean}\n   */\n  _checkHandlesPencilMode(data, eventData) {\n    const config = this.configuration;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n    let invalidHandlePlacement = freehandIntersect.newHandle(\n      mousePoint,\n      points\n    );\n\n    if (invalidHandlePlacement === false) {\n      invalidHandlePlacement = this._invalidHandlePencilMode(data, eventData);\n    }\n\n    return invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the mouse position is far enough from previous points (in pencilMode).\n   *\n   * @private\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data associated with the event.\n   * @returns {Boolean}\n   */\n  _invalidHandlePencilMode(data, eventData) {\n    const config = this.configuration;\n    const element = eventData.element;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n\n    const mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(\n      element,\n      points[0],\n      mousePoint\n    );\n\n    if (mouseAtOriginHandle) {\n      data.canComplete = true;\n\n      return false;\n    }\n\n    data.canComplete = false;\n\n    // Compare with all other handles appart from the last one\n    for (let i = 1; i < points.length - 1; i++) {\n      if (this._isDistanceSmallerThanSpacing(element, points[i], mousePoint)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if two points are closer than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceSmallerThanCompleteSpacingCanvas(element, p1, p2) {\n    const p1Canvas = external.cornerstone.pixelToCanvas(element, p1);\n    const p2Canvas = external.cornerstone.pixelToCanvas(element, p2);\n\n    let completeHandleRadius;\n\n    if (this._drawingInteractionType === 'Mouse') {\n      completeHandleRadius = this.configuration.completeHandleRadius;\n    } else if (this._drawingInteractionType === 'Touch') {\n      completeHandleRadius = this.configuration.completeHandleRadiusTouch;\n    }\n\n    return this._compareDistanceToSpacing(\n      element,\n      p1Canvas,\n      p2Canvas,\n      '<',\n      completeHandleRadius\n    );\n  }\n\n  /**\n   * Returns true if two points are closer than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceSmallerThanSpacing(element, p1, p2) {\n    return this._compareDistanceToSpacing(element, p1, p2, '<');\n  }\n\n  /**\n   * Returns true if two points are farther than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceLargerThanSpacing(element, p1, p2) {\n    return this._compareDistanceToSpacing(element, p1, p2, '>');\n  }\n\n  /**\n   * Compares the distance between two points to this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @param  {string} comparison  The comparison to make.\n   * @param  {number} spacing     The allowed canvas spacing\n   * @returns {boolean}           True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _compareDistanceToSpacing(\n    element,\n    p1,\n    p2,\n    comparison = '>',\n    spacing = this.configuration.spacing\n  ) {\n    if (comparison === '>') {\n      return external.cornerstoneMath.point.distance(p1, p2) > spacing;\n    }\n\n    return external.cornerstoneMath.point.distance(p1, p2) < spacing;\n  }\n\n  /**\n   * Adds drawing loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @param {string} interactionType - The interactionType used for the loop.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _activateDraw(element, interactionType = 'Mouse') {\n    this._drawing = true;\n    this._drawingInteractionType = interactionType;\n\n    state.isMultiPartToolActive = true;\n    hideToolCursor(this.element);\n\n    // Polygonal Mode\n    element.addEventListener(EVENTS.MOUSE_DOWN, this._drawingMouseDownCallback);\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._drawingMouseMoveCallback);\n    element.addEventListener(\n      EVENTS.MOUSE_DOUBLE_CLICK,\n      this._drawingMouseDoubleClickCallback\n    );\n\n    // Drag/Pencil Mode\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._drawingMouseDragCallback);\n    element.addEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n\n    // Touch\n    element.addEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingMouseMoveCallback\n    );\n    element.addEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingTouchStartCallback\n    );\n\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._drawingTouchDragCallback);\n    element.addEventListener(EVENTS.TOUCH_END, this._drawingMouseUpCallback);\n    element.addEventListener(\n      EVENTS.DOUBLE_TAP,\n      this._drawingDoubleTapClickCallback\n    );\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Removes drawing loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _deactivateDraw(element) {\n    this._drawing = false;\n    state.isMultiPartToolActive = false;\n    this._activeDrawingToolReference = null;\n    this._drawingInteractionType = null;\n    setToolCursor(this.element, this.svgCursor);\n\n    element.removeEventListener(\n      EVENTS.MOUSE_DOWN,\n      this._drawingMouseDownCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_MOVE,\n      this._drawingMouseMoveCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_DOUBLE_CLICK,\n      this._drawingMouseDoubleClickCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_DRAG,\n      this._drawingMouseDragCallback\n    );\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n\n    // Touch\n    element.removeEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingTouchStartCallback\n    );\n    element.removeEventListener(\n      EVENTS.TOUCH_DRAG,\n      this._drawingTouchDragCallback\n    );\n    element.removeEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingMouseMoveCallback\n    );\n    element.removeEventListener(EVENTS.TOUCH_END, this._drawingMouseUpCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _activateModify(element) {\n    state.isToolLocked = true;\n\n    element.addEventListener(EVENTS.MOUSE_UP, this._editMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._editMouseDragCallback);\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._editMouseUpCallback);\n\n    element.addEventListener(EVENTS.TOUCH_END, this._editMouseUpCallback);\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._editTouchDragCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Removes modify loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _deactivateModify(element) {\n    state.isToolLocked = false;\n\n    element.removeEventListener(EVENTS.MOUSE_UP, this._editMouseUpCallback);\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._editMouseDragCallback);\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._editMouseUpCallback);\n\n    element.removeEventListener(EVENTS.TOUCH_END, this._editMouseUpCallback);\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._editTouchDragCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  passiveCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  enabledCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  disabledCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  _closeToolIfDrawing(element) {\n    if (this._drawing) {\n      // Actively drawing but changed mode.\n      const config = this.configuration;\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n      external.cornerstone.updateImage(element);\n    }\n  }\n\n  /**\n   * Fire cornerstonetoolsmeasurementmodified event on provided element\n   * @param {any} element which freehand data has been modified\n   * @param {any} data the measurment data\n   */\n  fireModifiedEvent(element, data) {\n    const modifiedEventData = {\n      toolName: this.name,\n      element,\n      measurementData: data,\n    };\n\n    external.cornerstone.triggerEvent(\n      element,\n      EVENTS.MEASUREMENT_MODIFIED,\n      modifiedEventData\n    );\n  }\n\n  // ===================================================================\n  // Public Configuration API. .\n  // ===================================================================\n\n  get spacing() {\n    return this.configuration.spacing;\n  }\n\n  set spacing(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand spacing to a value other than a number.'\n      );\n    }\n\n    this.configuration.spacing = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get activeHandleRadius() {\n    return this.configuration.activeHandleRadius;\n  }\n\n  set activeHandleRadius(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand activeHandleRadius to a value other than a number.'\n      );\n    }\n\n    this.configuration.activeHandleRadius = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get completeHandleRadius() {\n    return this.configuration.completeHandleRadius;\n  }\n\n  set completeHandleRadius(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand completeHandleRadius to a value other than a number.'\n      );\n    }\n\n    this.configuration.completeHandleRadius = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get alwaysShowHandles() {\n    return this.configuration.alwaysShowHandles;\n  }\n\n  set alwaysShowHandles(value) {\n    if (typeof value !== 'boolean') {\n      throw new Error(\n        'Attempting to set freehand alwaysShowHandles to a value other than a boolean.'\n      );\n    }\n\n    this.configuration.alwaysShowHandles = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get invalidColor() {\n    return this.configuration.invalidColor;\n  }\n\n  set invalidColor(value) {\n    /*\n      It'd be easy to check if the color was e.g. a valid rgba color. However\n      it'd be difficult to check if the color was a named CSS color without\n      bloating the library, so we don't. If the canvas can't intepret the color\n      it'll show up grey.\n    */\n\n    this.configuration.invalidColor = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  /**\n   * Ends the active drawing loop and removes the polygon.\n   *\n   * @public\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @returns {null}\n   */\n  cancelDrawing(element) {\n    if (!this._drawing) {\n      return;\n    }\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n\n    const data = toolState.data[config.currentTool];\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    removeToolState(element, this.name, data);\n\n    this._deactivateDraw(element);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * newImageCallback - new image event handler.\n   *\n   * @public\n   * @param  {Object} evt The event.\n   * @returns {null}\n   */\n  newImageCallback(evt) {\n    const config = this.configuration;\n\n    if (!(this._drawing && this._activeDrawingToolReference)) {\n      return;\n    }\n\n    // Actively drawing but scrolled to different image.\n\n    const element = evt.detail.element;\n    const data = this._activeDrawingToolReference;\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Connect the end handle to the origin handle\n    const points = data.handles.points;\n\n    points[config.currentHandle - 1].lines.push(points[0]);\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    this._deactivateDraw(element);\n\n    external.cornerstone.updateImage(element);\n  }\n}\n\nfunction defaultFreehandConfiguration() {\n  return {\n    mouseLocation: {\n      handles: {\n        start: {\n          highlight: true,\n          active: true,\n        },\n      },\n    },\n    spacing: 1,\n    activeHandleRadius: 3,\n    completeHandleRadius: 6,\n    completeHandleRadiusTouch: 28,\n    alwaysShowHandles: false,\n    invalidColor: 'crimson',\n    currentHandle: 0,\n    currentTool: -1,\n  };\n}\n\nfunction preventPropagation(evt) {\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../drawing/index.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport { lengthCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:LengthTool');\n\n/**\n * @public\n * @class LengthTool\n * @memberof Tools.Annotation\n * @classdesc Tool for measuring distances.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class LengthTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'Length',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: lengthCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const { x, y } = eventData.currentPoints.image;\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      handles: {\n        start: {\n          x,\n          y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x,\n          y,\n          highlight: true,\n          active: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n\n      return false;\n    }\n\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n      25\n    );\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n\n    const lineWidth = toolStyle.getToolWidth();\n    const imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n    let rowPixelSpacing;\n    let colPixelSpacing;\n\n    if (imagePlane) {\n      rowPixelSpacing =\n        imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;\n      colPixelSpacing =\n        imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;\n    } else {\n      rowPixelSpacing = image.rowPixelSpacing;\n      colPixelSpacing = image.columnPixelSpacing;\n    }\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        // Configurable shadow\n        setShadow(context, this.configuration);\n\n        const color = toolColors.getColorIfActive(data);\n\n        // Draw the measurement line\n        drawLine(context, element, data.handles.start, data.handles.end, {\n          color,\n        });\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Set rowPixelSpacing and columnPixelSpacing to 1 if they are undefined (or zero)\n        const dx =\n          (data.handles.end.x - data.handles.start.x) * (colPixelSpacing || 1);\n        const dy =\n          (data.handles.end.y - data.handles.start.y) * (rowPixelSpacing || 1);\n\n        // Calculate the length, and create the text variable with the millimeters or pixels suffix\n        const length = Math.sqrt(dx * dx + dy * dy);\n\n        // Store the length inside the tool for outside access\n        data.length = length;\n\n        if (!data.handles.textBox.hasMoved) {\n          const coords = {\n            x: Math.max(data.handles.start.x, data.handles.end.x),\n          };\n\n          // Depending on which handle has the largest x-value,\n          // Set the y-value for the text box\n          if (coords.x === data.handles.start.x) {\n            coords.y = data.handles.start.y;\n          } else {\n            coords.y = data.handles.end.y;\n          }\n\n          data.handles.textBox.x = coords.x;\n          data.handles.textBox.y = coords.y;\n        }\n\n        // Move the textbox slightly to the right and upwards\n        // So that it sits beside the length tool handle\n        const xOffset = 10;\n\n        const text = textBoxText(data, rowPixelSpacing, colPixelSpacing);\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          text,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          xOffset,\n          true\n        );\n      });\n    }\n\n    function textBoxText(data, rowPixelSpacing, colPixelSpacing) {\n      // Set the length text suffix depending on whether or not pixelSpacing is available\n      let suffix = ' mm';\n\n      if (!rowPixelSpacing || !colPixelSpacing) {\n        suffix = ' pixels';\n      }\n\n      return `${data.length.toFixed(2)}${suffix}`;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      const midpoint = {\n        x: (handles.start.x + handles.end.x) / 2,\n        y: (handles.start.y + handles.end.y) / 2,\n      };\n\n      return [handles.start, midpoint, handles.end];\n    }\n  }\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  drawHandles,\n  drawRect,\n  drawLinkedTextBox,\n  setShadow,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { rectangleRoiCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:RectangleRoiTool');\n\n/**\n * @public\n * @class RectangleRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing rectangular regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class RectangleRoiTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'RectangleRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        // showMinMax: false,\n        // showHounsfieldUnits: true\n      },\n      svgCursor: rectangleRoiCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        initialRotation: eventData.viewport.rotation,\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    const rect = {\n      left: Math.min(startCanvas.x, endCanvas.x),\n      top: Math.min(startCanvas.y, endCanvas.y),\n      width: Math.abs(startCanvas.x - endCanvas.x),\n      height: Math.abs(startCanvas.y - endCanvas.y),\n    };\n\n    const distanceToPoint = external.cornerstoneMath.rect.distanceToPoint(\n      rect,\n      coords\n    );\n\n    return distanceToPoint < distance;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const { image, element } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    let imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing =\n      imagePlane && imagePlane.rowPixelSpacing && imagePlane.columnPixelSpacing;\n\n    imagePlane = imagePlane || {};\n    const pixelSpacing = {\n      rowPixelSpacing: imagePlane.rowPixelSpacing || 1,\n      columnPixelSpacing: imagePlane.columnPixelSpacing || 1,\n    };\n\n    draw(context, context => {\n      // If we have tool data for this element - iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        // Draw\n        drawRect(\n          context,\n          element,\n          data.handles.start,\n          data.handles.end,\n          {\n            color,\n          },\n          'pixel',\n          data.handles.initialRotation\n        );\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            _throttledUpdateCachedStats(\n              image,\n              element,\n              data,\n              modality,\n              pixelSpacing\n            );\n          } else {\n            _updateCachedStats(image, element, data, modality, pixelSpacing);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          data.handles.textBox.x = Math.max(\n            data.handles.start.x,\n            data.handles.end.x\n          );\n          data.handles.textBox.y =\n            (data.handles.start.y + data.handles.end.y) / 2;\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          0,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n *\n */\nconst _throttledUpdateCachedStats = throttle(_updateCachedStats, 110);\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} data\n * @param {string} modality\n * @param {*} pixelSpacing\n * @returns {void}\n */\nfunction _updateCachedStats(image, element, data, modality, pixelSpacing) {\n  const stats = _calculateStats(\n    image,\n    element,\n    data.handles,\n    modality,\n    pixelSpacing\n  );\n\n  data.cachedStats = stats;\n  data.invalidated = false;\n}\n\n/**\n * TODO: This is the same method (+ GetPixels) for the other ROIs\n * TODO: The pixel filtering is the unique bit\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number}}\n */\nfunction _getRectangleImageCoordinates(startHandle, endHandle) {\n  return {\n    left: Math.min(startHandle.x, endHandle.x),\n    top: Math.min(startHandle.y, endHandle.y),\n    width: Math.abs(startHandle.x - endHandle.x),\n    height: Math.abs(startHandle.y - endHandle.y),\n  };\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the rectangle in image coordinates\n  const roiCoordinates = _getRectangleImageCoordinates(\n    handles.start,\n    handles.end\n  );\n\n  // Retrieve the array of pixels that the rectangle bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    roiCoordinates.left,\n    roiCoordinates.top,\n    roiCoordinates.width,\n    roiCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the rectangle details\n  const roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates);\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, roiMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, roiMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  // Calculate the image area from the rectangle dimensions and pixel spacing\n  const area =\n    roiCoordinates.width *\n    (pixelSpacing.columnPixelSpacing || 1) *\n    (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1));\n\n  return {\n    area: area || 0,\n    count: roiMeanStdDev.count || 0,\n    mean: roiMeanStdDev.mean || 0,\n    variance: roiMeanStdDev.variance || 0,\n    stdDev: roiMeanStdDev.stdDev || 0,\n    min: roiMeanStdDev.min || 0,\n    max: roiMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n\n/**\n *\n *\n * @param {*} sp\n * @param {*} rectangle\n * @returns {{ count, number, mean: number,  variance: number,  stdDev: number,  min: number,  max: number }}\n */\nfunction _calculateRectangleStats(sp, rectangle) {\n  let sum = 0;\n  let sumSquared = 0;\n  let count = 0;\n  let index = 0;\n  let min = sp ? sp[0] : null;\n  let max = sp ? sp[0] : null;\n\n  for (let y = rectangle.top; y < rectangle.top + rectangle.height; y++) {\n    for (let x = rectangle.left; x < rectangle.left + rectangle.width; x++) {\n      sum += sp[index];\n      sumSquared += sp[index] * sp[index];\n      min = Math.min(min, sp[index]);\n      max = Math.max(max, sp[index]);\n      count++; // TODO: Wouldn't this just be sp.length?\n      index++;\n    }\n  }\n\n  if (count === 0) {\n    return {\n      count,\n      mean: 0.0,\n      variance: 0.0,\n      stdDev: 0.0,\n      min: 0.0,\n      max: 0.0,\n    };\n  }\n\n  const mean = sum / count;\n  const variance = sumSquared / count - mean * mean;\n\n  return {\n    count,\n    mean,\n    variance,\n    stdDev: Math.sqrt(variance),\n    min,\n    max,\n  };\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = _getRectangleImageCoordinates(\n    startHandle,\n    endHandle\n  );\n\n  return [\n    {\n      // Top middle point of rectangle\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of rectangle\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of rectangle\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of rectangle\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\n/**\n * TODO: This is identical to EllipticalROI's same fn\n * TODO: We may want to make this a utility for ROIs with these values?\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}]\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV },\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const showHounsfieldUnits = options.showHounsfieldUnits !== false;\n  const textLines = [];\n\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const suffix = modality === 'CT' && showHounsfieldUnits ? ' HU' : '';\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))}${suffix}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )}${suffix}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min}${suffix}`;\n      const maxString = `Max: ${max}${suffix}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n","import external from './../../externalModules.js';\nimport EVENTS from './../../events.js';\nimport BaseTool from './BaseTool.js';\nimport isToolActive from './../../store/isToolActive.js';\nimport store from './../../store/index.js';\nimport { getToolState } from '../../stateManagement/toolState.js';\nimport { globalImageIdSpecificToolStateManager } from '../../stateManagement/imageIdSpecificStateManager.js';\n\nconst { state, setters } = store.modules.brush;\n\n/**\n * @abstract\n * @memberof Tools.Base\n * @classdesc Abstract class for tools which manipulate the mask data to be displayed on\n * the cornerstone canvas.\n * @extends Tools.Base.BaseTool\n */\nclass BaseBrushTool extends BaseTool {\n  constructor({\n    name,\n    strategies,\n    defaultStrategy,\n    configuration,\n    supportedInteractionTypes,\n    mixins,\n    svgCursor,\n  }) {\n    configuration.referencedToolData = 'brush';\n\n    super({\n      name,\n      strategies,\n      defaultStrategy,\n      configuration,\n      supportedInteractionTypes,\n      mixins,\n      svgCursor,\n    });\n\n    this.updateOnMouseMove = true;\n    this.hideDefaultCursor = true;\n\n    this._drawing = false;\n    this._drawingMouseUpCallback = this._drawingMouseUpCallback.bind(this);\n  }\n\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  /**\n   * Helper function for rendering the brush.\n   *\n   * @abstract\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  renderBrush(evt) {\n    throw new Error(`Method renderBrush not implemented for ${this.name}.`);\n  }\n\n  /**\n   * Paints the data to the canvas.\n   *\n   * @protected\n   * @abstract\n   * @param  {Object} evt The event.\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  _paint(evt) {\n    throw new Error(`Method _paint not implemented for ${this.name}.`);\n  }\n\n  // ===================================================================\n  // Virtual Methods - Have default behavior but may be overriden.\n  // ===================================================================\n\n  /**\n   * Event handler for MOUSE_DRAG event.\n   *\n   * @override\n   * @event\n   * @param {Object} evt - The event.\n   */\n  mouseDragCallback(evt) {\n    this._startPainting(evt);\n  }\n\n  /**\n   * Event handler for MOUSE_DOWN event.\n   *\n   * @override\n   * @event\n   * @param {Object} evt - The event.\n   */\n  preMouseDownCallback(evt) {\n    this._startPainting(evt);\n\n    return true;\n  }\n\n  /**\n   * Initialise painting with baseBrushTool\n   *\n   * @protected\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _startPainting(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n\n    this._paint(evt);\n    this._drawing = true;\n    this._startListeningForMouseUp(element);\n    this._lastImageCoords = eventData.currentPoints.image;\n  }\n\n  /**\n   * Event handler for MOUSE_MOVE event.\n   *\n   * @override\n   * @event\n   * @param {Object} evt - The event.\n   */\n  mouseMoveCallback(evt) {\n    const { currentPoints } = evt.detail;\n\n    this._lastImageCoords = currentPoints.image;\n  }\n\n  /**\n   * Event handler for switching mode to passive;\n   *\n   * @override\n   * @event\n   * @param {Object} evt - The event.\n   */\n  // eslint-disable-next-line no-unused-vars\n  passiveCallback(evt) {\n    try {\n      external.cornerstone.updateImage(this.element);\n    } catch (error) {\n      // It is possible that the image has not been loaded\n      // when this is called.\n      return;\n    }\n  }\n\n  /**\n   * Used to redraw the tool's annotation data per render.\n   *\n   * @override\n   * @param {Object} evt - The event.\n   */\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n\n    // Only brush needs to render.\n    if (isToolActive(element, this.name)) {\n      // Call the hover event for the brush\n      this.renderBrush(evt);\n    }\n  }\n\n  // ===================================================================\n  // Implementation interface\n  // ===================================================================\n\n  /**\n   * Get the draw color (segmentation) of the tool.\n   *\n   * @protected\n   * @param  {Number} drawId The id of the color (segmentation) to switch to.\n   * @returns {string} The brush color in rgba format\n   */\n  _getBrushColor(drawId) {\n    const colormap = external.cornerstone.colors.getColormap(state.colorMapId);\n    const colorArray = colormap.getColor(drawId);\n\n    if (this._drawing) {\n      return `rgba(${colorArray[[0]]}, ${colorArray[[1]]}, ${\n        colorArray[[2]]\n      }, 1.0 )`;\n    }\n\n    return `rgba(${colorArray[[0]]}, ${colorArray[[1]]}, ${\n      colorArray[[2]]\n    }, 0.8 )`;\n  }\n\n  /**\n   * Event handler for MOUSE_UP during the drawing event loop.\n   *\n   * @protected\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _drawingMouseUpCallback(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n\n    this._drawing = false;\n    this._mouseUpRender = true;\n\n    this._stopListeningForMouseUp(element);\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @protected\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _startListeningForMouseUp(element) {\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.removeEventListener(\n      EVENTS.MOUSE_CLICK,\n      this._drawingMouseUpCallback\n    );\n\n    element.addEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._drawingMouseUpCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @protected\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _stopListeningForMouseUp(element) {\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.removeEventListener(\n      EVENTS.MOUSE_CLICK,\n      this._drawingMouseUpCallback\n    );\n\n    external.cornerstone.updateImage(element);\n  }\n\n  // ===================================================================\n  // Segmentation API. This is effectively a wrapper around the store.\n  // ===================================================================\n\n  /**\n   * Switches to the next segmentation color.\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  nextSegmentation() {\n    const numberOfColors = this.constructor.getNumberOfColors();\n\n    let drawId = state.drawColorId + 1;\n\n    if (drawId === numberOfColors) {\n      drawId = 0;\n    }\n\n    state.drawColorId = drawId;\n  }\n\n  /**\n   * Switches to the previous segmentation color.\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  previousSegmentation() {\n    const numberOfColors = this.constructor.getNumberOfColors();\n\n    let drawId = state.drawColorId - 1;\n\n    if (drawId < 0) {\n      drawId = numberOfColors - 1;\n    }\n\n    state.drawColorId = drawId;\n  }\n\n  /**\n   * Increases the brush size\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  increaseBrushSize() {\n    const oldRadius = state.radius;\n    let newRadius = Math.floor(oldRadius * 1.2);\n\n    // If e.g. only 2 pixels big. Math.floor(2*1.2) = 2.\n    // Hence, have minimum increment of 1 pixel.\n    if (newRadius === oldRadius) {\n      newRadius += 1;\n    }\n\n    setters.radius(newRadius);\n  }\n\n  /**\n   * Decreases the brush size\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  decreaseBrushSize() {\n    const oldRadius = state.radius;\n    const newRadius = Math.floor(oldRadius * 0.8);\n\n    setters.radius(newRadius);\n  }\n\n  /**\n   * Displays a segmentation on the element.\n   *\n   * @public\n   * @api\n   * @param  {Number} segIndex        The index of the segmentation.\n   * @returns {void}\n   */\n  showSegmentationOnElement(segIndex) {\n    const enabledElement = this._getEnabledElement();\n    const enabledElementUID = enabledElement.uuid;\n\n    setters.brushVisibilityForElement(enabledElementUID, segIndex, true);\n\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  /**\n   * Hides a segmentation on an element.\n   *\n   * @public\n   * @api\n   * @param  {Number} segIndex        The index of the segmentation.\n   * @returns {void}\n   */\n  hideSegmentationOnElement(segIndex) {\n    const enabledElement = this._getEnabledElement();\n    const enabledElementUID = enabledElement.uuid;\n\n    setters.brushVisibilityForElement(enabledElementUID, segIndex, false);\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  /**\n   * Displays all segmentations on an element.\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  showAllSegmentationsOnElement() {\n    const enabledElement = this._getEnabledElement();\n    const enabledElementUID = enabledElement.uuid;\n    const colormap = external.cornerstone.colors.getColormap(state.colorMapId);\n    const numberOfColors = colormap.getNumberOfColors();\n\n    for (let segIndex = 0; segIndex < numberOfColors; segIndex++) {\n      setters.brushVisibilityForElement(enabledElementUID, segIndex, true);\n    }\n\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  /**\n   * Hides all segmentations on an element.\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  hideAllSegmentationsOnElement() {\n    const enabledElement = this._getEnabledElement();\n    const enabledElementUID = enabledElement.uuid;\n    const colormap = external.cornerstone.colors.getColormap(state.colorMapId);\n    const numberOfColors = colormap.getNumberOfColors();\n\n    for (let segIndex = 0; segIndex < numberOfColors; segIndex++) {\n      setters.brushVisibilityForElement(enabledElementUID, segIndex, false);\n    }\n\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  /**\n   * Returns the number of colors in the colormap.\n   *\n   * @static\n   * @public\n   * @api\n   * @returns {Number} The number of colors in the color map.\n   */\n  static getNumberOfColors() {\n    const colormap = external.cornerstone.colors.getColormap(state.colorMapId);\n\n    return colormap.getNumberOfColors();\n  }\n\n  get alpha() {\n    return state.alpha;\n  }\n\n  set alpha(value) {\n    const enabledElement = this._getEnabledElement();\n\n    state.alpha = value;\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  get hiddenButActiveAlpha() {\n    return state.hiddenButActiveAlpha;\n  }\n\n  set hiddenButActiveAlpha(value) {\n    const enabledElement = this._getEnabledElement();\n\n    state.hiddenButActiveAlpha = value;\n    external.cornerstone.updateImage(enabledElement.element);\n  }\n\n  _getEnabledElement() {\n    return external.cornerstone.getEnabledElement(this.element);\n  }\n\n  /**\n   * Returns the toolData type assoicated with this type of tool.\n   *\n   * @static\n   * @public\n   * @returns {String} The number of colors in the color map.\n   */\n  static getReferencedToolDataName() {\n    return 'brush';\n  }\n\n  /**\n   * Invalidate all the brush data.\n   *\n   * @static\n   * @public\n   * @param {string} enabledElementUID - This identifier for the enabled element.\n   * @returns {void}\n   */\n  static invalidateBrushOnEnabledElement(enabledElementUID) {\n    /** WIP **/\n    const element = store.getters.enabledElementByUID(enabledElementUID);\n\n    const stackToolState = getToolState(element, 'stack');\n\n    if (!stackToolState) {\n      return;\n    }\n\n    const imageIds = stackToolState.data[0].imageIds;\n\n    const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      if (toolState[imageId] && toolState[imageId].brush) {\n        const brushData = toolState[imageId].brush.data;\n\n        for (let j = 0; j < brushData.length; j++) {\n          if (brushData[j].pixelData) {\n            brushData[j].invalidated = true;\n          }\n        }\n      }\n    }\n\n    external.cornerstone.updateImage(element, true);\n  }\n\n  /**\n   * Returns a datacube for the segmentation.\n   *\n   * @static\n   * @param {string} enabledElementUID - This identifier for the enabled element.\n   * @returns {type}  description\n   */\n  static getDataAsVolume(enabledElementUID) {\n    /** WIP **/\n    const element = store.getters.enabledElementByUID(enabledElementUID);\n\n    const stackToolState = getToolState(element, 'stack');\n\n    if (!stackToolState) {\n      return;\n    }\n\n    const imageIds = stackToolState.data[0].imageIds;\n\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    const image = enabledElement.image;\n\n    const dim = {\n      xy: image.columns * image.rows,\n      z: image.rows,\n      xyz: image.columns * image.rows * imageIds.length,\n    };\n\n    const toolState = globalImageIdSpecificToolStateManager.saveToolState();\n\n    const buffer = new ArrayBuffer(dim.xyz);\n\n    const uint8View = new Uint8Array(buffer);\n\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      // TODO -> Workout HTF we will do this for multiple colors etc.\n      if (\n        toolState[imageId] &&\n        toolState[imageId].brush &&\n        toolState[imageId].brush.data[0].pixelData\n      ) {\n        // ADD brush data to the location of that slice.\n      }\n    }\n  }\n}\n\nexport default BaseBrushTool;\n","import external from '../externalModules.js';\nimport convertToVector3 from '../util/convertToVector3.js';\n\n/**\n * Projects a patient point to an image point\n * @export @public @method\n * @name projectPatientPointToImagePlane\n *\n * @param  {Object} patientPoint The patient point.\n * @param  {Object} imagePlane   The image plane used for projection.\n * @returns {Object}              The projected coordinates.\n */\nexport function projectPatientPointToImagePlane(patientPoint, imagePlane) {\n  const rowCosines = convertToVector3(imagePlane.rowCosines);\n  const columnCosines = convertToVector3(imagePlane.columnCosines);\n  const imagePositionPatient = convertToVector3(\n    imagePlane.imagePositionPatient\n  );\n  const point = patientPoint.clone().sub(imagePositionPatient);\n  const x = rowCosines.dot(point) / imagePlane.columnPixelSpacing;\n  const y = columnCosines.dot(point) / imagePlane.rowPixelSpacing;\n\n  return {\n    x,\n    y,\n  };\n}\n\n//\n/**\n * Projects an image point to a patient point\n * @export @public @method\n * @name imagePointToPatientPoint\n *\n * @param  {Object} imagePoint   The image point.\n * @param  {Object} imagePlane   The image plane used for projection.\n * @returns {Object}              The projected coordinates.\n */\nexport function imagePointToPatientPoint(imagePoint, imagePlane) {\n  const rowCosines = convertToVector3(imagePlane.rowCosines);\n  const columnCosines = convertToVector3(imagePlane.columnCosines);\n  const imagePositionPatient = convertToVector3(\n    imagePlane.imagePositionPatient\n  );\n\n  const x = rowCosines.clone().multiplyScalar(imagePoint.x);\n\n  x.multiplyScalar(imagePlane.columnPixelSpacing);\n  const y = columnCosines.clone().multiplyScalar(imagePoint.y);\n\n  y.multiplyScalar(imagePlane.rowPixelSpacing);\n  const patientPoint = x.add(y);\n\n  patientPoint.add(imagePositionPatient);\n\n  return patientPoint;\n}\n\n/**\n * Returns a rectangle from the imagePlane.\n * @export @public @method\n * @name getRectangleFromImagePlane\n *\n * @param  {Object} imagePlane The imagePlane.\n * @returns {Object} The rect.\n */\nfunction getRectangleFromImagePlane(imagePlane) {\n  // Get the points\n  const topLeft = imagePointToPatientPoint(\n    {\n      x: 0,\n      y: 0,\n    },\n    imagePlane\n  );\n  const topRight = imagePointToPatientPoint(\n    {\n      x: imagePlane.columns,\n      y: 0,\n    },\n    imagePlane\n  );\n  const bottomLeft = imagePointToPatientPoint(\n    {\n      x: 0,\n      y: imagePlane.rows,\n    },\n    imagePlane\n  );\n  const bottomRight = imagePointToPatientPoint(\n    {\n      x: imagePlane.columns,\n      y: imagePlane.rows,\n    },\n    imagePlane\n  );\n\n  // Get each side as a vector\n  const rect = {\n    top: new external.cornerstoneMath.Line3(topLeft, topRight),\n    left: new external.cornerstoneMath.Line3(topLeft, bottomLeft),\n    right: new external.cornerstoneMath.Line3(topRight, bottomRight),\n    bottom: new external.cornerstoneMath.Line3(bottomLeft, bottomRight),\n  };\n\n  return rect;\n}\n\n/**\n * Gets all the intersections of a line with a rect.\n * @private\n * @method\n * @name lineRectangleIntersection\n *\n * @param  {Object} line The line to check.\n * @param  {Object} rect The rect being intersected.\n * @returns {Object[]} An array of the intersections.\n */\nfunction lineRectangleIntersection(line, rect) {\n  const intersections = [];\n\n  Object.keys(rect).forEach(function(side) {\n    const segment = rect[side];\n    const intersection = line.intersectLine(segment);\n\n    if (intersection) {\n      intersections.push(intersection);\n    }\n  });\n\n  return intersections;\n}\n\n/**\n * Gets the line of intersection between two planes in patient space.\n * @export @public @method\n * @name planePlaneIntersection\n *\n * @param  {Object} targetImagePlane    The target plane.\n * @param  {Object} referenceImagePlane The reference plane\n * @returns {Object}                   The intersections.\n */\nexport function planePlaneIntersection(targetImagePlane, referenceImagePlane) {\n  const targetRowCosines = convertToVector3(targetImagePlane.rowCosines);\n  const targetColumnCosines = convertToVector3(targetImagePlane.columnCosines);\n  const targetImagePositionPatient = convertToVector3(\n    targetImagePlane.imagePositionPatient\n  );\n  const referenceRowCosines = convertToVector3(referenceImagePlane.rowCosines);\n  const referenceColumnCosines = convertToVector3(\n    referenceImagePlane.columnCosines\n  );\n  const referenceImagePositionPatient = convertToVector3(\n    referenceImagePlane.imagePositionPatient\n  );\n\n  // First, get the normals of each image plane\n  const targetNormal = targetRowCosines.clone().cross(targetColumnCosines);\n  const targetPlane = new external.cornerstoneMath.Plane();\n\n  targetPlane.setFromNormalAndCoplanarPoint(\n    targetNormal,\n    targetImagePositionPatient\n  );\n\n  const referenceNormal = referenceRowCosines\n    .clone()\n    .cross(referenceColumnCosines);\n  const referencePlane = new external.cornerstoneMath.Plane();\n\n  referencePlane.setFromNormalAndCoplanarPoint(\n    referenceNormal,\n    referenceImagePositionPatient\n  );\n\n  const originDirection = referencePlane.clone().intersectPlane(targetPlane);\n  const origin = originDirection.origin;\n  const direction = originDirection.direction;\n\n  // Calculate the longest possible length in the reference image plane (the length of the diagonal)\n  const bottomRight = imagePointToPatientPoint(\n    {\n      x: referenceImagePlane.columns,\n      y: referenceImagePlane.rows,\n    },\n    referenceImagePlane\n  );\n  const distance = referenceImagePositionPatient.distanceTo(bottomRight);\n\n  // Use this distance to bound the ray intersecting the two planes\n  const line = new external.cornerstoneMath.Line3();\n\n  line.start = origin;\n  line.end = origin.clone().add(direction.multiplyScalar(distance));\n\n  // Find the intersections between this line and the reference image plane's four sides\n  const rect = getRectangleFromImagePlane(referenceImagePlane);\n  const intersections = lineRectangleIntersection(line, rect);\n\n  // Return the intersections between this line and the reference image plane's sides\n  // In order to draw the reference line from the target image.\n  if (intersections.length !== 2) {\n    return;\n  }\n\n  return {\n    start: intersections[0],\n    end: intersections[1],\n  };\n}\n\n/**\n * Translate a point using a rotation angle.\n * @export @public @method\n * @name rotatePoint\n *\n * @param {Object} point - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Number} angle - angle in degrees\n * @returns {Object} - `{ x, y }` new point translated\n */\nexport function rotatePoint(point, center, angle) {\n  const angleRadians = angle * (Math.PI / 180); // Convert to radians\n\n  const rotatedX =\n    Math.cos(angleRadians) * (point.x - center.x) -\n    Math.sin(angleRadians) * (point.y - center.y) +\n    center.x;\n\n  const rotatedY =\n    Math.sin(angleRadians) * (point.x - center.x) +\n    Math.cos(angleRadians) * (point.y - center.y) +\n    center.y;\n\n  return {\n    x: rotatedX,\n    y: rotatedY,\n  };\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://cornerstoneTools/./tools/annotation/LengthTool.js"],"names":["logger","getLogger","LengthTool","configuration","defaultConfig","name","supportedInteractionTypes","svgCursor","lengthCursor","initialConfiguration","Object","assign","eventData","goodEventData","currentPoints","image","error","x","y","visible","active","color","undefined","handles","start","highlight","end","textBox","hasMoved","movesIndependently","drawnIndependently","allowedOutsideImage","hasBoundingBox","element","data","coords","hasStartAndEndHandles","validParameters","warn","lineSegDistance","evt","detail","handleRadius","drawHandlesOnHover","toolData","getToolState","currentTarget","context","getNewContext","canvasContext","canvas","lineWidth","toolStyle","getToolWidth","imagePlane","external","cornerstone","metaData","get","imageId","rowPixelSpacing","colPixelSpacing","rowImagePixelSpacing","columnPixelSpacing","colImagePixelSpacing","i","draw","setShadow","toolColors","getColorIfActive","drawLine","handleOptions","drawHandlesIfActive","drawHandles","dx","dy","length","Math","sqrt","max","xOffset","text","drawLinkedTextBox","textBoxAnchorPoints","textBoxText","suffix","toFixed","midpoint","BaseAnnotationTool"],"mappings":"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","file":"cornerstoneTools.483ba9e3a523077946a3.hot-update.js","sourcesContent":["import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../drawing/index.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport { lengthCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:annotation:LengthTool');\n\n/**\n * @public\n * @class LengthTool\n * @memberof Tools.Annotation\n * @classdesc Tool for measuring distances.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class LengthTool extends BaseAnnotationTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'Length',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: lengthCursor,\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${\n          this.name\n        }'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const { x, y } = eventData.currentPoints.image;\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      handles: {\n        start: {\n          x,\n          y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x,\n          y,\n          highlight: true,\n          active: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n\n      return false;\n    }\n\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n      25\n    );\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n\n    const lineWidth = toolStyle.getToolWidth();\n    const imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n    let rowPixelSpacing;\n    let colPixelSpacing;\n\n    if (imagePlane) {\n      rowPixelSpacing =\n        imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;\n      colPixelSpacing =\n        imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;\n    } else {\n      rowPixelSpacing = image.rowPixelSpacing;\n      colPixelSpacing = image.columnPixelSpacing;\n    }\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        // Configurable shadow\n        setShadow(context, this.configuration);\n\n        const color = toolColors.getColorIfActive(data);\n\n        // Draw the measurement line\n        drawLine(context, element, data.handles.start, data.handles.end, {\n          color,\n        });\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Set rowPixelSpacing and columnPixelSpacing to 1 if they are undefined (or zero)\n        const dx =\n          (data.handles.end.x - data.handles.start.x) * (colPixelSpacing || 1);\n        const dy =\n          (data.handles.end.y - data.handles.start.y) * (rowPixelSpacing || 1);\n\n        // Calculate the length, and create the text variable with the millimeters or pixels suffix\n        const length = Math.sqrt(dx * dx + dy * dy);\n\n        // Store the length inside the tool for outside access\n        data.length = length;\n\n        if (!data.handles.textBox.hasMoved) {\n          const coords = {\n            x: Math.max(data.handles.start.x, data.handles.end.x),\n          };\n\n          // Depending on which handle has the largest x-value,\n          // Set the y-value for the text box\n          if (coords.x === data.handles.start.x) {\n            coords.y = data.handles.start.y;\n          } else {\n            coords.y = data.handles.end.y;\n          }\n\n          data.handles.textBox.x = coords.x;\n          data.handles.textBox.y = coords.y;\n        }\n\n        // Move the textbox slightly to the right and upwards\n        // So that it sits beside the length tool handle\n        const xOffset = 10;\n\n        const text = '';\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          text,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          xOffset,\n          true\n        );\n      });\n    }\n\n    function textBoxText(data, rowPixelSpacing, colPixelSpacing) {\n      // Set the length text suffix depending on whether or not pixelSpacing is available\n      let suffix = ' mm';\n\n      if (!rowPixelSpacing || !colPixelSpacing) {\n        suffix = ' pixels';\n      }\n\n      return `${data.length.toFixed(2)}${suffix}`;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      const midpoint = {\n        x: (handles.start.x + handles.end.x) / 2,\n        y: (handles.start.y + handles.end.y) / 2,\n      };\n\n      return [handles.start, midpoint, handles.end];\n    }\n  }\n}\n"],"sourceRoot":""}